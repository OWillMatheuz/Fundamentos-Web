@import url('https://fonts.googleapis.com/css2?family=ABeeZee&family=Bangers&display=swap');

/* ! Configurações gerais */

/* criação de variaveis de cores */
/* obrigatoriamente as variaveis precisam começar o nome com o -- */
:root {
  --background: #fafce0;
  --purple: pink;
  --dark-purple: #1a090d;
  --black:black;
  --zul: rgb(101, 101, 246);
}

/* remover todo o padding e margem que o navegador possa colocar em algum elemento da tela */
* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body {
    background: rgb(34,193,195);
    background: radial-gradient(circle, rgba(34,193,195,1) 0%, rgba(253,187,45,1) 100%);
}

p {
  font-family: 'ABeeZee';
  margin-bottom: 0.75rem;
}

/* colocar as mesmas propriedades para vários elementos de uma vez, separando eles por virgula */
h1, h2, h3, a, nav p {
  font-family: 'Bangers', cursive;
  text-decoration:dotted;
  color: var(--dark-purple);
  letter-spacing: 3px;
}

h1, h2, h3 {
  text-align: center;
}

h1 {
  /* font-size: 64px; */
  font-size: 4rem;
}

h2 {
  font-size: 2.25rem;
}

h3 {
  font-size: 1.5rem;
  margin-bottom: 2rem;
}

nav {
  display: flex;
  /* definir o tamanho para 70 da tela, sendo que a tela sempre vai até o 100 */
  /* pode se dizer que está usando 70% da tela */
  width: 70vw;
  /* colocar 0 de margem em cima e em baixo, e automatica para os lados, isso vai deixar o conteudo centralizado */
  margin: 0 auto;
  justify-content: space-between;
  font-size: 2.25rem;
  padding: 2.25rem 1rem;
}

ul {
  list-style: none;
  display: flex;
  gap: 1rem;
  font-size: 24px;
}

a {
  text-decoration: none;
  font-size: 2rem;
  transition: text-shadow 0.2s ease-in-out;
}

/* aplicar uma sombra no texto quando passado o mouse por cima, pra dar um efeito no menu */
a:hover {
  text-shadow: 0 0 2px var(--zul);
}

/* diminuir o tamanho da linha de divisão e centralizar ela, pra ela não pegar a tela inteira */
hr {
  width: 60vw;
  margin: 2.5rem auto;
  height: 5px;
  border: none;
  background-color: var(--black);
}

main {
  width: 70vw;
  margin: 0 auto;
}

footer {
  padding: 2rem 0;
  border-top: 2px solid black;
  margin-top: 2rem;
  display: flex;
  justify-content: center;
}

.disabled {
}

#redesocial #redesocial {
    display: flex;
    width: 100px;
    height: 100px;
    padding: 5px;
}

#direitos{
    display: block;
}

/* ! Configurações da index.html */
.perfil {
  display: flex;
  background-color: var(--zul);
  padding: 20px;
  border-radius: 16px;
  align-items: center;
  gap: 20px;
}

.foto {
  width: 400px;
  border-radius: 8px;
}

.video {
  width: 65vw;
  /* forçar a proporção do video, sempre largura/altura */
  /* nesse exemplo, pra cada 16 pontos na largura, terá 9 pontos na altura... é o padrão de uma TV por exemplo */
  aspect-ratio: 16/9;
  margin: 0 auto;
  display: block;
  border-radius: 8px;
  margin-top: 2rem;
}

/* ! Configurações do contato */
.contato .perfil {
  display: flex;
  gap: 3rem;
  justify-content: center;
}

.endereco  {
  font-family: 'ABeeZee', sans-serif;
  color: var(--dark);
  font-size: 1.25rem;

}

.mapa {
  width: 35vw;
  aspect-ratio: 16/9;
  border-radius: 8px;
  /* código hexadecimal normalmente é feito com 6 digitos.. aqui tem 8, sendo que os ultimos 2, é pra colocar transparencia */
  display:flex;


}

.formulario {
  width: 100%;
}

label {
  font-family: 'ABeeZee', sans-serif;
  margin-left: 1rem;
}

input, textarea, button {
  width: 100%;
  margin-top: 0.25rem;
  padding: 0.5rem 1rem;
  border-radius: 8px;
  font-size: 1.25rem;
  color: var(--dark);
}

input::placeholder, textarea::placeholder {
  color: grey;
  font-family: 'ABeeZee', sans-serif;
}

input, textarea {
  border: 1px solid var(--dark-purple);
}

button {
  background-color: transparent;
  cursor: pointer;
  border: 2px solid var(--dark-purple)
}

button:hover {
  background-color: var(--dark-purple);
  color: #fff;
}

.campos-form {
  margin-bottom: 1rem;
}


/* ! Configurações de responsividade */
/* quando a tela tiver uma largura máxima de até 1000px, usar essas regras,  */
/* se a tela for maior do que isso, toda essa parte do código é ignorada */
/* gerando assim, a famosa responsividade para aparelhos de tamanho diferente */
@media (max-width: 1000px) {
  /* usei a mesma classe perfil, que está na linha 113 desse código, e estou adicionando uma propriedade a mais para ela */
  /* quando a tela for pequena, a exibição da imagem e do texto, em vez de ficar uma ao lado da outra */
  /* vai ficar com a imagem em cima e o texto em baixo, facilitando a visualização em um celular, por exemplo. */
  .perfil {
    flex-direction: column-reverse;
  }
}
